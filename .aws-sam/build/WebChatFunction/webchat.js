var y=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var x=(e,t)=>{for(var n in t)y(e,n,{get:t[n],enumerable:!0})},A=(e,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of f(t))!C.call(e,r)&&r!==n&&y(e,r,{get:()=>t[r],enumerable:!(o=P(t,r))||o.enumerable});return e};var S=e=>A(y({},"__esModule",{value:!0}),e);var b={};x(b,{handler:()=>N});module.exports=S(b);var w=require("@aws-sdk/client-apigatewaymanagementapi");var a=require("@aws-sdk/client-dynamodb"),u=require("@aws-sdk/client-apigatewaymanagementapi"),c=new a.DynamoDBClient({}),d=process.env.TABLE_NAME;async function m(e,t){let n={connectionId:{S:t??""}};try{return await c.send(new a.PutItemCommand({TableName:d,Item:n})),{statusCode:200,body:JSON.stringify("connected")}}catch(o){return console.log(o),{statusCode:400,body:JSON.stringify("failed to connect")}}}async function l(e,t){let{groupId:n}=JSON.parse(e.body??"{}"),o={connectionId:{S:t??""},groupId:{S:n}};try{return await c.send(new a.PutItemCommand({TableName:d,Item:o})),{statusCode:200,body:JSON.stringify("group registered")}}catch(r){return console.log(r),{statusCode:400,body:JSON.stringify("failed to register group")}}}async function g(e){try{return await c.send(new a.DeleteItemCommand({TableName:d,Key:{connectionId:{S:e??""}}})),{statusCode:200,body:JSON.stringify("disconnected")}}catch(t){return console.log(t),{statusCode:500,body:JSON.stringify("failed to disconnect")}}}async function p(e,t){let{groupId:n,message:o}=JSON.parse(e.body??"{}"),i=(await c.send(new a.QueryCommand({TableName:d,IndexName:"groupId-index",KeyConditionExpression:"groupId = :g",ExpressionAttributeValues:{":g":{S:n}}}))).Items||[];if(i.length===0)return{statusCode:404,body:"no active connections in group"};try{for(let s of i){let I=s.connectionId.S;await t.send(new u.PostToConnectionCommand({ConnectionId:I,Data:o}))}return{statusCode:200,body:JSON.stringify("message sent")}}catch(s){return console.log(s),{statusCode:400,body:JSON.stringify(`failed to send message to group ${n}`)}}}var N=async e=>{let t=e.requestContext.connectionId,n=e.requestContext.routeKey,o=e.requestContext.domainName,r=e.requestContext.stage,i=new w.ApiGatewayManagementApiClient({endpoint:`https://${o}/${r}`});try{switch(n){case"$connect":return await m(e,t??"");case"register":return await l(e,t??"");case"$disconnect":return await g(t??"");case"send":return await p(e,i);case"$default":return{statusCode:200,body:JSON.stringify("hit default route due to improper action")};default:return{statusCode:400,body:JSON.stringify("Unsupported route"),headers:{"Content-Type":"application/json"}}}}catch(s){return console.error(s),{statusCode:500,body:JSON.stringify("Internal Server Error")}}};0&&(module.exports={handler});
//# sourceMappingURL=webchat.js.map
